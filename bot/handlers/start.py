from aiogram import Router, types, F
from aiogram.filters import Command
from db.service.user_service import get_or_create_user
from config.config import CHANNEL_ID, CHANNEL_USERNAME
from bot.utils import check_subscription
from db.database import async_session

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message, bot):
    keyboard = types.InlineKeyboardMarkup(
        inline_keyboard=[
            [
                types.InlineKeyboardButton(
                    text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                    callback_data="check_subscription"
                )
            ]
        ]
    )
    
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:\n"
        f"https://t.me/{CHANNEL_USERNAME}\n\n"
        "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:",
        reply_markup=keyboard
    )

@router.callback_query(F.data == "check_subscription")
async def check_subscription_callback(callback: types.CallbackQuery, bot):
    if await check_subscription(callback.from_user.id, bot):
        async with async_session() as session:
            user = await get_or_create_user(session, callback.from_user)

        keyboard2 = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    types.InlineKeyboardButton(
                        text="IOS",
                        callback_data="ios"
                    ),
                    types.InlineKeyboardButton(
                        text="Android",
                        callback_data="android"
                    )
                ]
            ]
        )
        # keyboard = types.InlineKeyboardMarkup(
        #     inline_keyboard=[
        #         [
        #             types.InlineKeyboardButton(
        #                 text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å VPN",
        #                 callback_data="payment"
        #             )
        #         ],
        #         [
        #             types.InlineKeyboardButton(
        #                 text="üîë –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é",
        #                 callback_data="get_vpn"
        #             )
        #         ]
        #     ]
        # )
        
        await callback.message.edit_text(
            "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!\n\n"
            "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω—ã 149 —Ä—É–±–ª–µ–π –Ω–∞ –±–∞–ª–∞–Ω—Å.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard2
        )
    else:
        await callback.answer(
            "‚ùå –í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            show_alert=True
        )

