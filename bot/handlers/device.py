from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from db.database import async_session
from db.service.user_service import get_or_create_user, get_user_by_username
from bot.vpn_manager import VPNManager
from config.config import TECH_SUPPORT_USERNAME
from typing import Optional
import asyncio

router = Router()


async def process_vpn_config(
        callback: types.CallbackQuery,
        platform: str,
        instruction_url: Optional[str] = None
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º

    :param callback: –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
    :param platform: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞
    :param instruction_url: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    """
    async with async_session() as session:
        user = await get_or_create_user(session, callback.from_user)

        keyboard_buttons = []

        if instruction_url:
            keyboard_buttons.append([
                InlineKeyboardButton(text="üìï –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url=instruction_url)
            ])

        keyboard_buttons.append([
            InlineKeyboardButton(text="üè† –î–æ–º–æ–π", callback_data="home_first")
        ])

        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

        if user.vpn_link:
            await callback.message.edit_text(
                f"üîó –í–∞—à–∞ VPN —Å—Å—ã–ª–∫–∞:\n\n"
                f"{user.vpn_link}\n\n"
                f"üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
                f"1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤—ã—à–µ\n"
                f"2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
                f"3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n"
                f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {user.subscription_end.strftime('%d.%m.%Y')}",
                reply_markup=keyboard,
                disable_web_page_preview=False
            )
            await callback.answer()
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        await callback.answer("‚è≥ –°–æ–∑–¥–∞–µ–º VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...")
        
        await callback.message.edit_text(
            "üîß –°–æ–∑–¥–∞–µ–º –≤–∞—à—É VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...\n\n"
            "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥"
        )

        vpn_manager = VPNManager(session)
        vpn_link = await vpn_manager.create_vpn_config(
            user=user,
            subscription_days=14
        )

        if vpn_link:
            await callback.message.edit_text(
                f"üîó –í–∞—à–∞ VPN —Å—Å—ã–ª–∫–∞:\n\n"
                f"{user.vpn_link}\n\n"
                f"üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
                f"1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤—ã—à–µ\n"
                f"2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
                f"3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n"
                f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {user.subscription_end.strftime('%d.%m.%Y')}",
                reply_markup=keyboard,
                disable_web_page_preview=False
            )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ú–æ–∏ –∫–ª—é—á–∏\"\n",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data=callback.data)],
                    [InlineKeyboardButton(text="üè† –î–æ–º–æ–π", callback_data='home_first')],
                ])
            )


@router.callback_query(F.data == "ios")
async def ios_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="iOS",
        instruction_url="https://teletype.in/@meowadmin/Z4Z0lCMlWWr"
    )


@router.callback_query(F.data == "android")
async def android_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="Android",
        instruction_url="https://teletype.in/@meowadmin/Z4Z0lCMlWWr"
    )


@router.callback_query(F.data == "windows")
async def windows_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="Windows",
        instruction_url="https://teletype.in/@meowadmin/Z4Z0lCMlWWr"
    )


@router.callback_query(F.data == "macos")
async def windows_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="MacOS",
        instruction_url="https://teletype.in/@meowadmin/Z4Z0lCMlWWr"
    )

