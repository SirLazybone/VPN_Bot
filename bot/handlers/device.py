from aiogram import Router, types, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from db.database import async_session
from db.service.user_service import get_or_create_user, get_user_by_username
from bot.vpn_manager import VPNManager
from config.config import TECH_SUPPORT_USERNAME
from typing import Optional

router = Router()


async def process_vpn_config(
        callback: types.CallbackQuery,
        platform: str,
        instruction_url: Optional[str] = None
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º

    :param callback: –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
    :param platform: –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'iOS', 'Android')
    :param instruction_url: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    """
    async with async_session() as session:
        user = await get_or_create_user(session, callback.from_user)

        keyboard_buttons = []

        if instruction_url:
            keyboard_buttons.append([
                InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url=instruction_url)
            ])

        keyboard_buttons.append([
            InlineKeyboardButton(text="–î–æ–º–æ–π", callback_data="home")
        ])

        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

        if user.vpn_link:
            await callback.message.edit_text(
                f"üîë –í–∞—à–∞ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è {platform}:\n\n"
                f"<code>{user.vpn_link}</code>\n\n"
                f"–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {user.subscription_end.strftime('%d.%m.%Y')}",
                "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è",
                reply_markup=keyboard
            )
            await callback.answer()
            return

        vpn_manager = VPNManager(session)
        vpn_link = await vpn_manager.create_vpn_config(
            user=user,
            subscription_days=30
        )

        if vpn_link:
            await callback.message.edit_text(
                f"üîë –í–∞—à–∞ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è {platform}:\n\n"
                f"<code>{vpn_link}</code>\n\n"
                f"–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {user.subscription_end.strftime('%d.%m.%Y')}\n\n"
                "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 30 –¥–Ω–µ–π.",
                reply_markup=keyboard
            )
        else:
            await callback.message.edit_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", url=f'https://t.me/{TECH_SUPPORT_USERNAME}')]
                ])
            )

        await callback.answer()


@router.callback_query(F.data == "ios")
async def ios_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="iOS",
        instruction_url="https://ya.ru/"  # TODO: –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è iOS
    )


@router.callback_query(F.data == "android")
async def android_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="Android",
        instruction_url="https://ya.ru/"  # TODO: –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è Android
    )


@router.callback_query(F.data == "windows")
async def windows_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="Windows",
        instruction_url="https://ya.ru/"  # TODO: –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è Android
    )


@router.callback_query(F.data == "macos")
async def windows_config(callback: types.CallbackQuery):
    await process_vpn_config(
        callback,
        platform="MacOS",
        instruction_url="https://ya.ru/"  # TODO: –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è Android
    )

