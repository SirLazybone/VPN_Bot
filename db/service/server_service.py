from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select, update
from sqlalchemy.orm import selectinload
from db.models import Server, User
from typing import List, Optional
from datetime import datetime, timedelta
from config.config import VPN_PRICE, BOT_TOKEN, ADMIN_NAME_1, ADMIN_NAME_2
from aiogram import Bot
import asyncio

ADMINS = [ADMIN_NAME_1, ADMIN_NAME_2]

async def get_all_servers(session: AsyncSession) -> List[Server]:
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã"""
    result = await session.execute(select(Server).order_by(Server.id))
    return result.scalars().all()

async def get_active_servers(session: AsyncSession) -> List[Server]:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã"""
    result = await session.execute(
        select(Server).where(Server.is_active == True).order_by(Server.id)
    )
    return result.scalars().all()

async def get_server_by_id(session: AsyncSession, server_id: int) -> Optional[Server]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–æ ID"""
    result = await session.execute(select(Server).where(Server.id == server_id))
    return result.scalar_one_or_none()

async def get_server_with_users(session: AsyncSession, server_id: int) -> Optional[Server]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    result = await session.execute(
        select(Server)
        .options(selectinload(Server.users))
        .where(Server.id == server_id)
    )
    return result.scalar_one_or_none()

async def get_server_users_count(session: AsyncSession, server_id: int) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"""
    result = await session.execute(
        select(User).where(User.server_id == server_id)
    )
    return len(result.scalars().all())

async def get_server_active_users_count(session: AsyncSession, server_id: int) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Å VPN –∫–æ–Ω—Ñ–∏–≥–∞–º–∏)"""
    result = await session.execute(
        select(User).where(
            User.server_id == server_id,
            User.vpn_link.isnot(None)
        )
    )
    return len(result.scalars().all())

async def get_default_server(session: AsyncSession) -> Optional[Server]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    result = await session.execute(
        select(Server).where(Server.is_default == True, Server.is_active == True)
    )
    server_fin = result.scalar_one_or_none()
    
    # –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å –Ω–∞–∏–º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∞–∫—Ç–∏–≤–Ω—ã–π
    if not server_fin:
        result = await session.execute(select(Server).where(Server.is_active == True))
        servers = result.scalars().all()
        min_users = int(1e10)
        for server in servers:
            users_count = await get_server_users_count(session, server.id)
            if users_count < min_users:
                min_users = users_count
                server_fin = server
    return server_fin

async def create_server(
    session: AsyncSession, 
    name: str, 
    url: str, 
    description: str = None,
    is_active: bool = True
) -> Server:
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä"""
    server = Server(
        name=name,
        url=url,
        description=description,
        is_active=is_active,
        is_default=False
    )
    session.add(server)
    await session.commit()
    await session.refresh(server)
    return server

async def update_server(
    session: AsyncSession,
    server_id: int,
    name: str = None,
    url: str = None,
    description: str = None,
    is_active: bool = None
) -> bool:
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"""
    update_data = {}
    if name is not None:
        update_data[Server.name] = name
    if url is not None:
        update_data[Server.url] = url
    if description is not None:
        update_data[Server.description] = description
    if is_active is not None:
        update_data[Server.is_active] = is_active
    
    if not update_data:
        return False
    
    result = await session.execute(
        update(Server).where(Server.id == server_id).values(**update_data)
    )
    await session.commit()
    return result.rowcount > 0

async def set_default_server(session: AsyncSession, server_id: int) -> bool:
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    # –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º —Ñ–ª–∞–≥ is_default —É –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
    await session.execute(update(Server).values(is_default=False))
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    result = await session.execute(
        update(Server).where(Server.id == server_id).values(is_default=True)
    )
    await session.commit()
    return result.rowcount > 0

async def delete_server(session: AsyncSession, server_id: int) -> bool:
    """–£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞ –Ω–µ–º –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    users_result = await session.execute(
        select(User).where(User.server_id == server_id).limit(1)
    )
    if users_result.scalar_one_or_none():
        return False  # –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    
    server = await get_server_by_id(session, server_id)
    if server:
        await session.delete(server)
        await session.commit()
        return True
    return False

async def get_servers_count(session: AsyncSession) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤"""
    result = await session.execute(select(Server))
    return len(result.scalars().all())

async def get_servers_statistics(session: AsyncSession) -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º —Å–µ—Ä–≤–µ—Ä–∞–º"""
    servers = await get_all_servers(session)
    stats = {
        "total_servers": len(servers),
        "active_servers": 0,
        "servers_data": []
    }
    
    for server in servers:
        if server.is_active:
            stats["active_servers"] += 1
        
        total_users = await get_server_users_count(session, server.id)
        active_users = await get_server_active_users_count(session, server.id)
        
        server_data = {
            "id": server.id,
            "name": server.name,
            "url": server.url,
            "is_active": server.is_active,
            "is_default": server.is_default,
            "total_users": total_users,
            "active_users": active_users,
            "description": server.description
        }
        stats["servers_data"].append(server_data)
    
    return stats

async def _create_vpn_configs_in_background(
    users_data: List[dict], 
    target_server_id: int, 
    source_server_name: str,
    target_server_name: str
):
    """
    –°–æ–∑–¥–∞–µ—Ç VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    """
    from bot.vpn_manager import VPNManager  # –ò–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    from db.database import async_session
    
    bot = Bot(token=BOT_TOKEN)
    success_count = 0
    error_count = 0
    
    try:
        async with async_session() as session:
            vpn_manager = VPNManager(session)
            
            for user_data in users_data:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
                    result = await session.execute(
                        select(User).where(User.id == user_data['user_id'])
                    )
                    user = result.scalar_one_or_none()
                    
                    if not user:
                        continue
                    
                    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤—É—é –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (–∏—Å—Ö–æ–¥–Ω–∞—è + 30 –¥–Ω–µ–π)
                    original_end = user_data['original_subscription_end']
                    extended_end = original_end + timedelta(days=30)
                    user.subscription_end = extended_end
                    
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ —Å –ø—Ä–æ–¥–ª–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π
                    new_expire_ts = int(extended_end.timestamp())
                    vpn_success = await vpn_manager.renew_subscription(
                        user=user, 
                        new_expire_ts=new_expire_ts
                    )
                    
                    if vpn_success:
                        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–π VPN —Å—Å—ã–ª–∫–∏
                        await session.refresh(user)
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π VPN —Å—Å—ã–ª–∫–æ–π
                        message = (
                            f"‚úÖ –í–ê–®–ê VPN –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ê!\n\n"
                            f"üîÑ –í–∞—à —Å–µ—Ä–≤–µ—Ä '{source_server_name}' –±—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ '{target_server_name}'.\n\n"
                            f"üîó –í–∞—à–∞ –Ω–æ–≤–∞—è VPN —Å—Å—ã–ª–∫–∞:\n"
                            f"```\n{user.vpn_link}\n```\n\n"
                            f"üéÅ –í –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –º—ã –ø—Ä–æ–¥–ª–∏–ª–∏ –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π!\n"
                            f"‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ —Ç–µ–ø–µ—Ä—å –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {extended_end.strftime('%d.%m.%Y %H:%M')}\n"
                            f"(–±—ã–ª–æ –¥–æ: {original_end.strftime('%d.%m.%Y %H:%M')})\n\n"
                            f"‚ú® –ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–π!"
                        )
                        
                        await bot.send_message(user.telegram_id, message, parse_mode='Markdown')
                        success_count += 1
                    else:
                        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å VPN, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π —Å–æ–∑–¥–∞—Ç—å –≤—Ä—É—á–Ω—É—é
                        # –ù–æ –ø–æ–¥–ø–∏—Å–∫–∞ –≤—Å—ë —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∞
                        message = (
                            f"‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢–°–Ø –î–ï–ô–°–¢–í–ò–ï\n\n"
                            f"–í–∞—à —Å–µ—Ä–≤–µ—Ä '{source_server_name}' –±—ã–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ú—ã –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏–ª–∏ –≤–∞—Å –Ω–∞ '{target_server_name}', –Ω–æ –Ω–µ —Å–º–æ–≥–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.\n\n"
                            f"üìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n"
                            f"‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ \'–ú–æ–∏ –∫–ª—é—á–∏\'\n\n"
                            f"üéÅ –í –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –º—ã –ø—Ä–æ–¥–ª–∏–ª–∏ –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π!\n"
                            f"‚è∞ –ü–æ–¥–ø–∏—Å–∫–∞ —Ç–µ–ø–µ—Ä—å –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {extended_end.strftime('%d.%m.%Y %H:%M')}\n"
                            f"(–±—ã–ª–æ –¥–æ: {original_end.strftime('%d.%m.%Y %H:%M')})\n\n"
                            f"–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞! üôè"
                        )
                        
                        await bot.send_message(user.telegram_id, message)
                        error_count += 1
                    
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                    await asyncio.sleep(1)
                    
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VPN –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data.get('username', 'Unknown')}: {e}")
                    error_count += 1
                    continue
                finally:
                    await session.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        final_report = (
            f"üèÅ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –ü–û –°–û–ó–î–ê–ù–ò–Æ VPN –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô\n\n"
            f"üîÑ –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å '{source_server_name}' –Ω–∞ '{target_server_name}'\n\n"
            f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:\n"
            f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: {success_count}\n"
            f"‚ùå –û—à–∏–±–æ–∫: {error_count}\n"
            f"üë• –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(users_data)}\n\n"
            f"üéÅ –í—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–æ–¥–ª–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π\n\n"
            f"üïê –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S')} UTC"
        )
        
        try:
            for admin in ADMINS:
                if admin:
                    try:
                        result = await session.execute(
                            select(User).where(User.username == admin.replace('@', ''))
                        )
                        admin_user = result.scalar_one_or_none()
                        await bot.send_message(admin_user.telegram_id, final_report)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin}: {e}")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç: {e}")
            
    except Exception as e:
        error_report = (
            f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –°–û–ó–î–ê–ù–ò–ò VPN –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô\n\n"
            f"–ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å '{source_server_name}' –Ω–∞ '{target_server_name}'\n"
            f"–û—à–∏–±–∫–∞: {str(e)}\n\n"
            f"üïê –í—Ä–µ–º—è: {datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S')} UTC"
        )
        try:
            for admin in ADMINS:
                if admin:
                    try:
                        result = await session.execute(
                            select(User).where(User.username == admin.replace('@', ''))
                        )
                        admin_user = result.scalar_one_or_none()
                        await bot.send_message(admin_user.telegram_id, error_report)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin}: {e}")
        except:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {e}")
    
    finally:
        await bot.session.close()

async def reassign_users_to_server(
    session: AsyncSession, 
    from_server_id: int, 
    to_server_id: int
) -> int:
    """
    –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –¥—Ä—É–≥–æ–π
    —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ–º VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª–µ–≤–æ–π —Å–µ—Ä–≤–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    target_server = await get_server_by_id(session, to_server_id)
    if not target_server:
        raise ValueError(f"–°–µ—Ä–≤–µ—Ä —Å ID {to_server_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ö–æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    source_server = await get_server_by_id(session, from_server_id)
    source_server_name = source_server.name if source_server else f"ID {from_server_id}"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    users_result = await session.execute(
        select(User).where(User.server_id == from_server_id)
    )
    users = users_result.scalars().all()
    
    if not users:
        return 0
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    bot = Bot(token=BOT_TOKEN)
    
    current_time = datetime.utcnow()
    
    active_users_data = []  # –î–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    inactive_users_count = 0
    notified_users = 0
    
    try:
        for user in users:
            # –û—á–∏—â–∞–µ–º VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            user.vpn_link = None
            
            # –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
            user.server_id = to_server_id
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            is_active = user.is_active and user.subscription_end and user.subscription_end > current_time
            
            if is_active:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è VPN —Å –ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º –Ω–∞ 30 –¥–Ω–µ–π
                active_users_data.append({
                    'user_id': user.id,
                    'username': user.username,
                    'telegram_id': user.telegram_id,
                    'subscription_end': user.subscription_end,
                    'original_subscription_end': user.subscription_end  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –¥–∞—Ç—É
                })
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                try:
                    message = (
                        f"üîÑ –ü–ï–†–ï–ù–ê–ó–ù–ê–ß–ï–ù–ò–ï –°–ï–†–í–ï–†–ê\n\n"
                        f"–í–∞—à —Å–µ—Ä–≤–µ—Ä '{source_server_name}' –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ú—ã –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏–ª–∏ –≤–∞—Å –Ω–∞ '{target_server.name}' –∏ —Å–µ–π—á–∞—Å —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.\n\n"
                        f"‚è≥ –ù–æ–≤–∞—è VPN —Å—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç\n"
                        f"üéÅ –í –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –º—ã –ø—Ä–æ–¥–ª–∏–º –≤–∞—à—É –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π\n\n"
                        f"–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üôè"
                    )
                    
                    await bot.send_message(user.telegram_id, message)
                    notified_users += 1
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}: {e}")
            else:
                # –î–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞–µ–º, –±–µ–∑ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏
                inactive_users_count += 1
                
                try:
                    message = (
                        f"–£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û –ü–ï–†–ï–ù–ê–ó–ù–ê–ß–ï–ù–ò–ò\n\n"
                        f"–í–∞—à —Å–µ—Ä–≤–µ—Ä '{source_server_name}' –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í—ã –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ '{target_server.name}'.\n\n"
                        f"–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è VPN —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ.\n\n"
                        f"–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞! üôè"
                    )
                    
                    await bot.send_message(user.telegram_id, message)
                    notified_users += 1
                except Exception as e:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.username}: {e}")
        
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            await session.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        admin_message = (
            f"üìä –û–¢–ß–ï–¢ –û –ü–ï–†–ï–ù–ê–ó–ù–ê–ß–ï–ù–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô\n\n"
            f"üîÑ –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ '{source_server_name}' –Ω–∞ '{target_server.name}'\n\n"
            f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            f"üë• –í—Å–µ–≥–æ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–æ: {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(active_users_data)}\n"
            f"‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {inactive_users_count}\n"
            f"üì± –£—Å–ø–µ—à–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã: {notified_users}\n\n"
            f"üéÅ –ê–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π\n"
            f"üîÑ –ó–∞–ø—É—â–µ–Ω–æ —Ñ–æ–Ω–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è {len(active_users_data)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n\n"
            f"üïê –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S')} UTC"
        )
        
        try:
            for admin in ADMINS:
                if admin:
                    try:
                        result = await session.execute(
                            select(User).where(User.username == admin.replace('@', ''))
                        )
                        admin_user = result.scalar_one_or_none()
                        await bot.send_message(admin_user.telegram_id, admin_message)
                    except Exception as e:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin}: {e}")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if active_users_data:
            await asyncio.create_task(_create_vpn_configs_in_background(
                active_users_data,
                to_server_id,
                source_server_name,
                target_server.name
            ))
        
        return len(users)
        
    except Exception as e:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–∫–∞—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        await session.rollback()
        raise e
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close() 