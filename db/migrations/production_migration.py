"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é (PostgreSQL)
–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å–µ—Ä–≤–µ—Ä–æ–≤, –Ω–æ–≤—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ
"""

from sqlalchemy import text
from db.database import async_session
from datetime import datetime

async def production_migration_postgresql():
    """
    –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ (PostgreSQL):
    1. –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å–µ—Ä–≤–µ—Ä–æ–≤
    2. –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è server_id –∏ trial_used –≤ users
    3. –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–≤–µ—Ä—ã –¥–∞–Ω–Ω—ã–º–∏
    4. –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º
    """
    async with async_session() as session:
        try:
            print("üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ (PostgreSQL)...")
            
            # ===== –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ =====
            print("\nüìã –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–µ—Ä–≤–µ—Ä–æ–≤...")
            
            await session.execute(text("""
                CREATE TABLE IF NOT EXISTS servers (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR NOT NULL,
                    url VARCHAR NOT NULL,
                    is_active BOOLEAN DEFAULT TRUE,
                    is_default BOOLEAN DEFAULT FALSE,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    description VARCHAR
                )
            """))
            print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ servers —Å–æ–∑–¥–∞–Ω–∞")
            
            # ===== –≠–¢–ê–ü 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤ users =====
            print("\nüë§ –≠—Ç–∞–ø 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü—É users...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è (PostgreSQL —Å–ø–æ—Å–æ–±)
            result = await session.execute(text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name = 'users' AND table_schema = 'public'
            """))
            columns = [row[0] for row in result.fetchall()]
            
            # –î–æ–±–∞–≤–ª—è–µ–º server_id –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'server_id' not in columns:
                await session.execute(text(
                    "ALTER TABLE users ADD COLUMN server_id INTEGER NULL"
                ))
                print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ server_id (nullable)")
            else:
                print("   ‚ÑπÔ∏è –ü–æ–ª–µ server_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            # –î–æ–±–∞–≤–ª—è–µ–º trial_used –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if 'trial_used' not in columns:
                await session.execute(text(
                    "ALTER TABLE users ADD COLUMN trial_used BOOLEAN DEFAULT FALSE NOT NULL"
                ))
                print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ trial_used")
            else:
                print("   ‚ÑπÔ∏è –ü–æ–ª–µ trial_used —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            await session.commit()
            
            # ===== –≠–¢–ê–ü 3: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ =====
            print("\nüñ•Ô∏è –≠—Ç–∞–ø 3: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Ä–≤–µ—Ä—ã
            result = await session.execute(text("SELECT COUNT(*) FROM servers"))
            servers_count = result.scalar()
            
            if servers_count == 0:
                servers_data = [
                    {
                        'id': 1,
                        'name': 'Netherland-1',
                        'url': 'vn.nethcloud.top:8080',
                        'is_active': True,
                        'is_default': True,
                        'description': '–û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã'
                    },
                    {
                        'id': 2,
                        'name': 'Netherland-2',
                        'url': 'vn2.nethcloud.top:8080',
                        'is_active': True,
                        'is_default': False,
                        'description': '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã'
                    },
                    {
                        'id': 3,
                        'name': 'Paris-1',
                        'url': 'paris1.nethcloud.top:8080',
                        'is_active': True,
                        'is_default': False,
                        'description': '–°–µ—Ä–≤–µ—Ä –ü–∞—Ä–∏–∂'
                    }
                ]
                
                for server in servers_data:
                    await session.execute(text("""
                        INSERT INTO servers (id, name, url, is_active, is_default, description)
                        VALUES (:id, :name, :url, :is_active, :is_default, :description)
                    """), server)
                    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–µ—Ä: {server['name']} -> {server['url']}")
                
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
                await session.execute(text("SELECT setval('servers_id_seq', 3)"))
                
                print(f"   üìä –°–æ–∑–¥–∞–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {len(servers_data)}")
            else:
                print(f"   ‚ÑπÔ∏è –í —Ç–∞–±–ª–∏—Ü–µ —É–∂–µ –µ—Å—Ç—å {servers_count} —Å–µ—Ä–≤–µ—Ä–æ–≤")
            
            await session.commit()
            
            # ===== –≠–¢–ê–ü 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ trial_used –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π =====
            print("\nüéØ –≠—Ç–∞–ø 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ trial_used = True –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            
            result = await session.execute(text("""
                UPDATE users SET trial_used = TRUE WHERE trial_used = FALSE AND vpn_link IS NOT NULL
            """))
            
            updated_trial_count = result.rowcount
            print(f"   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {updated_trial_count}")
            
            await session.commit()
            
            # ===== –≠–¢–ê–ü 5: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º =====
            print("\nüé™ –≠—Ç–∞–ø 5: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
            result = await session.execute(text("""
                SELECT COUNT(*) FROM users WHERE vpn_link IS NOT NULL AND server_id IS NULL
            """))
            users_to_assign = result.scalar()
            
            if users_to_assign > 0:
                print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å VPN –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {users_to_assign}")
                
                # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –ª–æ–≥–∏–∫–µ:
                # id 1-155 -> server_id = 1
                # id 156-308 -> server_id = 2  
                # id 309-542 -> server_id = 3
                # id 543+ -> server_id = 1
                
                # –°–µ—Ä–≤–µ—Ä 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 1-155
                result = await session.execute(text("""
                    UPDATE users 
                    SET server_id = 1 
                    WHERE id >= 1 AND id <= 155 
                    AND vpn_link IS NOT NULL 
                    AND server_id IS NULL
                """))
                updated_1 = result.rowcount
                
                # –°–µ—Ä–≤–µ—Ä 2: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 156-308
                result = await session.execute(text("""
                    UPDATE users 
                    SET server_id = 2 
                    WHERE id >= 156 AND id <= 308 
                    AND vpn_link IS NOT NULL 
                    AND server_id IS NULL
                """))
                updated_2 = result.rowcount
                
                # –°–µ—Ä–≤–µ—Ä 3: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 309-542
                result = await session.execute(text("""
                    UPDATE users 
                    SET server_id = 3 
                    WHERE id >= 309 AND id <= 542 
                    AND vpn_link IS NOT NULL 
                    AND server_id IS NULL
                """))
                updated_3 = result.rowcount
                
                # –°–µ—Ä–≤–µ—Ä 1: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ 543+
                result = await session.execute(text("""
                    UPDATE users 
                    SET server_id = 1 
                    WHERE id >= 543 
                    AND vpn_link IS NOT NULL 
                    AND server_id IS NULL
                """))
                updated_4 = result.rowcount
                
                print(f"   üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º:")
                print(f"      üñ•Ô∏è –°–µ—Ä–≤–µ—Ä 1 (Netherland-1): {updated_1 + updated_4} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                print(f"      üñ•Ô∏è –°–µ—Ä–≤–µ—Ä 2 (Netherland-2): {updated_2} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                print(f"      üñ•Ô∏è –°–µ—Ä–≤–µ—Ä 3 (Paris-1): {updated_3} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                print(f"      üìà –í—Å–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ: {updated_1 + updated_2 + updated_3 + updated_4}")
                
            else:
                print("   ‚ÑπÔ∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
            
            await session.commit()
            
            # ===== –≠–¢–ê–ü 6: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞ =====
            print("\nüîó –≠—Ç–∞–ø 6: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            result = await session.execute(text("""
                SELECT COUNT(*) FROM users u 
                WHERE u.server_id IS NOT NULL 
                AND u.server_id NOT IN (SELECT id FROM servers)
            """))
            orphaned_users = result.scalar()
            
            if orphaned_users > 0:
                print(f"   ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ {orphaned_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ server_id")
                
                # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏
                await session.execute(text("""
                    UPDATE users 
                    SET server_id = 1 
                    WHERE server_id IS NOT NULL 
                    AND server_id NOT IN (SELECT id FROM servers)
                """))
                print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {orphaned_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π -> —Å–µ—Ä–≤–µ—Ä 1")
            else:
                print("   ‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞
            result = await session.execute(text("""
                SELECT COUNT(*) FROM information_schema.table_constraints 
                WHERE constraint_name = 'users_server_id_fkey' 
                AND table_name = 'users'
            """))
            fk_exists = result.scalar() > 0
            
            if not fk_exists:
                try:
                    await session.execute(text("""
                        ALTER TABLE users 
                        ADD CONSTRAINT users_server_id_fkey 
                        FOREIGN KEY (server_id) REFERENCES servers(id)
                    """))
                    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á users.server_id -> servers.id")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á: {e}")
            else:
                print("   ‚ÑπÔ∏è –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            
            await session.commit()
            
            # ===== –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê =====
            print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            
            # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            result = await session.execute(text("SELECT COUNT(*) FROM users"))
            total_users = result.scalar()
            
            result = await session.execute(text("SELECT COUNT(*) FROM users WHERE vpn_link IS NOT NULL"))
            users_with_vpn = result.scalar()
            
            result = await session.execute(text("SELECT COUNT(*) FROM users WHERE trial_used = TRUE"))
            users_trial_used = result.scalar()
            
            print(f"   üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
            print(f"   üñ•Ô∏è –° VPN –∫–æ–Ω—Ñ–∏–≥–∞–º–∏: {users_with_vpn}")
            print(f"   üéØ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {users_trial_used}")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º
            result = await session.execute(text("""
                SELECT s.id, s.name, COUNT(u.id) as user_count
                FROM servers s
                LEFT JOIN users u ON s.id = u.server_id AND u.vpn_link IS NOT NULL
                GROUP BY s.id, s.name
                ORDER BY s.id
            """))
            
            print(f"   üñ•Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å–µ—Ä–≤–µ—Ä–∞–º:")
            for row in result:
                server_id, server_name, user_count = row
                print(f"      {server_id}: {server_name} - {user_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            await session.commit()
            print("\n‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
            await session.rollback()
            raise

if __name__ == "__main__":
    import asyncio
    asyncio.run(production_migration_postgresql()) 