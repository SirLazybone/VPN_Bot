#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from sqlalchemy.orm import selectinload
from sqlalchemy import select
from db.database import async_session
from db.models import User, Server
from db.service.server_service import (
    get_servers_statistics, get_server_with_users,
    get_server_users_count, get_server_active_users_count
)

async def test_relationships():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏\n")
    
    async with async_session() as session:
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞:")
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º server_id –¥–æ–ª–∂–Ω–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –æ—à–∏–±–∫–æ–π
            result = await session.execute(select(Server).limit(1))
            existing_server = result.scalar_one_or_none()
            
            if existing_server:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω —Å–µ—Ä–≤–µ—Ä —Å ID {existing_server.id} –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            else:
                print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä")
                from db.service.server_service import create_server
                existing_server = await create_server(session, "Test Server", "https://test.com", "Test server for FK")
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä —Å ID {existing_server.id}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ FK: {e}")
        
        # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
        print("\n2Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤:")
        try:
            stats = await get_servers_statistics(session)
            print(f"   üìä –í—Å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {stats['total_servers']}")
            print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤: {stats['active_servers']}")
            
            for server_data in stats["servers_data"][:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"\n   üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: {server_data['name']}")
                print(f"      ID: {server_data['id']}")
                print(f"      –ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ' if server_data['is_active'] else '‚ùå'}")
                print(f"      –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {server_data['total_users']}")
                print(f"      –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {server_data['active_users']}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        
        # –¢–µ—Å—Ç 3: –°–≤—è–∑–∏ ORM
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ORM —Å–≤—è–∑–µ–π:")
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ relationship
            result = await session.execute(select(Server).limit(1))
            server = result.scalar_one_or_none()
            
            if server:
                server_with_users = await get_server_with_users(session, server.id)
                if server_with_users:
                    print(f"   ‚úÖ –°–µ—Ä–≤–µ—Ä '{server_with_users.name}' –∑–∞–≥—Ä—É–∂–µ–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
                    print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ relationship: {len(server_with_users.users)}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    for i, user in enumerate(server_with_users.users[:3]):
                        print(f"      {i+1}. @{user.username} (ID: {user.id})")
                        print(f"         –ê–∫—Ç–∏–≤–µ–Ω –Ω–∞ VPN: {'‚úÖ' if user.vpn_server_active else '‚ùå'}")
                        print(f"         –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {'üéØ' if user.trial_used else '‚≠ï'}")
                else:
                    print("   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
            else:
                print("   ‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ORM —Å–≤—è–∑–µ–π: {e}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö:")
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã
            result = await session.execute(
                select(User)
                .outerjoin(Server, User.server_id == Server.id)
                .where(Server.id.is_(None))
            )
            orphaned_users = result.scalars().all()
            
            if orphaned_users:
                print(f"   ‚ùå –ù–∞–π–¥–µ–Ω–æ {len(orphaned_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–µ—Ä–≤–µ—Ä–∞–º–∏:")
                for user in orphaned_users[:5]:
                    print(f"      @{user.username} -> server_id: {user.server_id}")
            else:
                print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ server_id
            result = await session.execute(
                select(User).where(User.server_id.is_(None))
            )
            users_without_server = result.scalars().all()
            
            if users_without_server:
                print(f"   ‚ùå –ù–∞–π–¥–µ–Ω–æ {len(users_without_server)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ server_id")
            else:
                print("   ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏: {e}")
        
        # –¢–µ—Å—Ç 5: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
        try:
            import time
            
            # –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏
            start_time = time.time()
            result = await session.execute(
                select(User).options(selectinload(User.server)).limit(10)
            )
            users_with_servers = result.scalars().all()
            load_time = time.time() - start_time
            
            print(f"   ‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏: {load_time:.3f}—Å")
            
            if users_with_servers:
                user = users_with_servers[0]
                if hasattr(user, 'server') and user.server:
                    print(f"   ‚úÖ –°–≤—è–∑—å —Ä–∞–±–æ—Ç–∞–µ—Ç: @{user.username} -> {user.server.name}")
                else:
                    print(f"   ‚ö†Ô∏è –°–≤—è–∑—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–ª—è @{user.username}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {e}")
        
        print("\n" + "="*50)
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
        print("   - user.server –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("   - server.users –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–µ—Ä–≤–µ—Ä–∞")
        print("   - –£–ª—É—á—à–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∞–¥–º–∏–Ω–∫–µ")

async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π"""
    try:
        await test_relationships()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main()) 